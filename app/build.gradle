apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'com.google.android.gms.oss-licenses-plugin'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.prush.justanotherplayer"
        vectorDrawables.useSupportLibrary = true
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary = true
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //Material Design Component
    implementation "com.google.android.material:material:$rootProject.mdcVersion"

    //androidX
    implementation "androidx.core:core-ktx:$rootProject.coreKtxVersion"
    implementation "androidx.media:media:$rootProject.mediaVersion"
    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintlayoutVersion"
    implementation "androidx.preference:preference:$rootProject.preferenceVersion"

    //exo-player
    implementation "com.google.android.exoplayer:exoplayer-core:$rootProject.exoplayerVersion"
    implementation "com.google.android.exoplayer:exoplayer-ui:$rootProject.exoplayerVersion"
    implementation "com.google.android.exoplayer:extension-mediasession:$rootProject.exoplayerVersion"

    //Glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"

    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutinesVersion"

    //palette
    implementation "com.android.support:palette-v7:$rootProject.paletteVersion"

    //oss licenses
    implementation "com.google.android.gms:play-services-oss-licenses:$rootProject.ossLicensesVersion"

    //leak canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.leakCanaryVersion"

    //espresso
    androidTestImplementation "androidx.test:runner:$rootProject.testRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoCoreVersion"

    //junit
    testImplementation "junit:junit:$rootProject.jUnitVersion"

    //mockito-kotlin
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$rootProject.mockitoKotlinVersion"

    // For mocking data/model classes which are final by default
    testImplementation "org.mockito:mockito-inline:$rootProject.mockitoInlineVersion"

}
